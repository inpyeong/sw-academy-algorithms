#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

const int MAX = 500;

int N, M, Answer;
int Board[MAX][MAX];

int Tetromino[5][2][4][4][2] = {
  {
    {
      {
        {0,0},{0,1},{0,2},{0,3}
      },
      {
        {0,0},{0,1},{0,2},{0,3}
      },
      {
        {0,0},{0,1},{0,2},{0,3}
      },
      {
        {0,0},{0,1},{0,2},{0,3}
      }
    },
    {
      {
        {0,0},{1,0},{2,0},{3,0}
      },
      {
        {0,0},{1,0},{2,0},{3,0}
      },
      {
        {0,0},{1,0},{2,0},{3,0}
      },
      {
        {0,0},{1,0},{2,0},{3,0}
      }
    }
  },
  {
    {
      {
        {0,0},{0,1},{1,0},{1,1}
      },
      {
        {0,0},{0,1},{1,0},{1,1}
      },
      {
        {0,0},{0,1},{1,0},{1,1}
      },
      {
        {0,0},{0,1},{1,0},{1,1}
      }
    },
    {
      {
        {0,0},{0,1},{1,0},{1,1}
      },
      {
        {0,0},{0,1},{1,0},{1,1}
      },
      {
        {0,0},{0,1},{1,0},{1,1}
      },
      {
        {0,0},{0,1},{1,0},{1,1}
      }
    }
  },
  {
    {
      {
        {0,0},{1,0},{2,0},{2,1}
      },
      {
        {0,0},{0,1},{1,0},{2,0}
      },
      {
        {0,0},{0,1},{1,1},{2,1}
      },
      {
        {0,0},{0,1},{-1,1},{-2,1}
      }
    },
    {
      {
        {0,0},{1,0},{0,1},{0,2}
      },
      {
        {0,0},{1,0},{1,1},{1,2}
      },
      {
        {0,0},{0,1},{0,2},{-1,2}
      },
      {
        {0,0},{0,1},{0,2},{1,2}
      }
    }
  },
  {
    {
      {
        {0,0},{1,0},{1,1},{2,1}
      },
      {
        {0,0},{-1,0},{-1,1},{-2,1}
      },
      {
        {0,0},{1,0},{1,1},{2,1}
      },
      {
        {0,0},{-1,0},{-1,1},{-2,1}
      }
    },
    {
      {
        {0,0},{0,1},{-1,1},{-1,2}
      },
      {
        {0,0},{0,1},{1,1},{1,2}
      },
      {
        {0,0},{0,1},{-1,1},{-1,2}
      },
      {
        {0,0},{0,1},{1,1},{1,2}
      }
    }
  },
  {
    {
      {
        {0,0},{0,1},{0,2},{1,1}
      },
      {
        {0,0},{0,1},{-1,1},{0,2}
      },
      {
        {0,0},{0,1},{-1,1},{0,2}
      },
      {
        {0,0},{0,1},{0,2},{1,1}
      }
    },
    {
      {
        {0,0},{1,0},{1,-1},{2,0}
      },
      {
        {0,0},{1,0},{1,-1},{2,0}
      },
      {
        {0,0},{1,0},{1,1},{2,0}
      },
      {
        {0,0},{1,0},{1,1},{2,0}
      }
    }
  }
};

void input() {
  cin >> N >> M;
  for(int i = 0; i < N; ++i)
    for(int j = 0; j < M; ++j)
      cin >> Board[i][j];
}

void solution() {
  vector<pair<int, int> > v;
  for(int i = 0; i < N; ++i) {
    for(int j = 0; j < M; ++j) {

      for(int k = 0; k < 5; ++k) {
        for(int l = 0; l < 2; ++l) {
          for(int m = 0; m < 4; ++m) {
            v.clear();
            for(int n = 0; n < 4; ++n) {
              int ny = i + Tetromino[k][l][m][n][0];
              int nx = j + Tetromino[k][l][m][n][1];
              if(ny >= 0 && nx >= 0 && ny < N && nx < M) 
                v.push_back(make_pair(ny, nx));
            }
            if(v.size() == 4) {
              int sum = 0;
              for(int n = 0; n < 4; ++n)
                sum += Board[v[n].first][v[n].second];
              Answer = max(Answer, sum);
            }
          }
        }
      }

    }
  }
}

void solve() {
  input();
  solution();
  cout << Answer << endl;
}

int main() {
  solve();
  return 0;
}
